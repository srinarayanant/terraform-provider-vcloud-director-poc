# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pyvcloudprovider_pb2 as pyvcloudprovider__pb2


class PyVcloudProviderStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Login = channel.unary_unary(
        '/pyvcloudprovider.PyVcloudProvider/Login',
        request_serializer=pyvcloudprovider__pb2.TenantCredentials.SerializeToString,
        response_deserializer=pyvcloudprovider__pb2.LoginResult.FromString,
        )
    self.isPresentCatalog = channel.unary_unary(
        '/pyvcloudprovider.PyVcloudProvider/isPresentCatalog',
        request_serializer=pyvcloudprovider__pb2.Catalog.SerializeToString,
        response_deserializer=pyvcloudprovider__pb2.IsPresentCatalogResult.FromString,
        )
    self.CreateCatalog = channel.unary_unary(
        '/pyvcloudprovider.PyVcloudProvider/CreateCatalog',
        request_serializer=pyvcloudprovider__pb2.Catalog.SerializeToString,
        response_deserializer=pyvcloudprovider__pb2.CreateCatalogResult.FromString,
        )
    self.DeleteCatalog = channel.unary_unary(
        '/pyvcloudprovider.PyVcloudProvider/DeleteCatalog',
        request_serializer=pyvcloudprovider__pb2.Catalog.SerializeToString,
        response_deserializer=pyvcloudprovider__pb2.DeleteCatalogResult.FromString,
        )


class PyVcloudProviderServicer(object):
  """Interface exported by the server.
  """

  def Login(self, request, context):
    """Tenant Loging to VCD  
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def isPresentCatalog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateCatalog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteCatalog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PyVcloudProviderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=pyvcloudprovider__pb2.TenantCredentials.FromString,
          response_serializer=pyvcloudprovider__pb2.LoginResult.SerializeToString,
      ),
      'isPresentCatalog': grpc.unary_unary_rpc_method_handler(
          servicer.isPresentCatalog,
          request_deserializer=pyvcloudprovider__pb2.Catalog.FromString,
          response_serializer=pyvcloudprovider__pb2.IsPresentCatalogResult.SerializeToString,
      ),
      'CreateCatalog': grpc.unary_unary_rpc_method_handler(
          servicer.CreateCatalog,
          request_deserializer=pyvcloudprovider__pb2.Catalog.FromString,
          response_serializer=pyvcloudprovider__pb2.CreateCatalogResult.SerializeToString,
      ),
      'DeleteCatalog': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteCatalog,
          request_deserializer=pyvcloudprovider__pb2.Catalog.FromString,
          response_serializer=pyvcloudprovider__pb2.DeleteCatalogResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pyvcloudprovider.PyVcloudProvider', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
